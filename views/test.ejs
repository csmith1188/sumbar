<%- include('partials/head') %>
<div id="content">
  <h1>Python Code Runner</h1>

</div>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
  const content = document.getElementById('content');

  const problemPrompt = document.createElement('div');
  problemPrompt.id = 'problemPrompt';
  const loader = document.createElement('img');
  loader.id = 'loaderGif';
  loader.src = '/img/loader.gif';
  loader.alt = 'Loading...';
  problemPrompt.appendChild(loader);
  content.appendChild(problemPrompt);

  const precode = document.createElement('div');
  precode.id = 'precode';
  precode.className = 'codebox';
  precode.innerHTML = `<pre></pre>`;
  content.appendChild(precode);

  const usercode = document.createElement('textarea');
  usercode.id = 'usercode';
  usercode.className = 'codebox';
  content.appendChild(usercode);
  usercode.addEventListener("keydown", function(e) {
    if (e.key === "Tab") {
      e.preventDefault();
      const start = this.selectionStart;
      const end = this.selectionEnd;
      this.value = this.value.substring(0, start) + "\t" + this.value.substring(end);
      this.selectionStart = this.selectionEnd = start + 1;
    }
  });

  usercode.addEventListener('input', function() {
    this.style.height = 'auto';
    this.style.height = (this.scrollHeight) + 'px';
  });

  const postcode = document.createElement('div');
  postcode.id = 'postcode';
  postcode.className = 'codebox';
  postcode.innerHTML = `<pre></pre>`;
  content.appendChild(postcode);

  const buttonContainer = document.createElement('div');
  buttonContainer.id = 'buttonContainer';
  content.appendChild(buttonContainer);

  const output = document.createElement('div');
  output.id = 'outputBox';
  output.className = 'codebox';
  output.innerHTML = '<pre id="output"></pre>';
  content.appendChild(output);

  function showThumbs() {
    const upButton = document.createElement('button');
    upButton.id = 'upButton';
    upButton.textContent = 'Up';
    buttonContainer.appendChild(upButton);
    upButton.addEventListener("click", () => {
      socket.emit('run_code', {
        usercode: usercode.value,
        confidence: 'up'
      });
    });

    const wiggleButton = document.createElement('button');
    wiggleButton.id = 'wiggleButton';
    wiggleButton.textContent = 'Wiggle';
    buttonContainer.appendChild(wiggleButton);
    wiggleButton.addEventListener("click", () => {
      socket.emit('run_code', {
        usercode: usercode.value,
        confidence: 'wiggle'
      });
    });

    const downButton = document.createElement('button');
    downButton.id = 'downButton';
    downButton.textContent = 'Down';
    buttonContainer.appendChild(downButton);
    downButton.addEventListener("click", () => {
      socket.emit('run_code', {
        usercode: usercode.value,
        confidence: 'down'
      });
    });
  }

  const socket = io();

  socket.on('connect', () => {
    console.log('Connected to server');
  });

  socket.on('disconnect', () => {
    console.log('Disconnected from server');
  });

  socket.on('handlerReady', (data) => {
    console.log(data.message);
    socket.emit('nextProblem');
  });

  socket.on('problem', (data) => {
    problemPrompt.textContent = data.problem.prompt;
    precode.querySelector('pre').textContent = data.problem.precode;
    usercode.value = data.problem.usercode;
    postcode.querySelector('pre').textContent = data.problem.postcode;
    showThumbs();
  });

  socket.on('output', (data) => {
    if (data.correct) {
      output.classList.add('correct');
      output.classList.remove('incorrect');
    } else {
      output.classList.add('incorrect');
      output.classList.remove('correct');
    }
    output.querySelector('pre').textContent = data.output || data.error;
  });
</script>